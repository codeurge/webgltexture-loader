{"version":3,"sources":["../src/CanvasTextureLoader.js"],"names":["CanvasTextureLoader","disposes","input","HTMLCanvasElement","gl","width","height","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","get","WebGLTextureLoaderSyncHashCache","globalRegistry","add"],"mappings":";;;;;;;;AACA;;;;;;;;IAKMA,mB;;;;;;;;;;;;;;gNAGJC,Q,GAAW,E;;;;;4BAEHC,K,EAAY;AAClB,aAAOA,iBAAiBC,iBAAxB;AACD;;;8BAESD,K,EAA0B;AAClC,aAAOA,KAAP;AACD;;;+BAEUA,K,EAA0B;AAAA,UAC3BE,EAD2B,GACpB,IADoB,CAC3BA,EAD2B;AAAA,UAE3BC,KAF2B,GAETH,KAFS,CAE3BG,KAF2B;AAAA,UAEpBC,MAFoB,GAETJ,KAFS,CAEpBI,MAFoB;;AAGnC,UAAMC,UAAUH,GAAGI,aAAH,EAAhB;AACAJ,SAAGK,WAAH,CAAeL,GAAGM,UAAlB,EAA8BH,OAA9B;AACAH,SAAGO,UAAH,CAAcP,GAAGM,UAAjB,EAA6B,CAA7B,EAAgCN,GAAGQ,IAAnC,EAAyCR,GAAGQ,IAA5C,EAAkDR,GAAGS,aAArD,EAAoEX,KAApE;AACA,aAAO,EAAEK,gBAAF,EAAWF,YAAX,EAAkBC,cAAlB,EAAP;AACD;;;2BAEMJ,K,EAA0B;AAAA,UACvBE,EADuB,GAChB,IADgB,CACvBA,EADuB;;AAAA,iBAEX,KAAKU,GAAL,CAASZ,KAAT,CAFW;AAAA,UAEvBK,OAFuB,QAEvBA,OAFuB;;AAG/BH,SAAGK,WAAH,CAAeL,GAAGM,UAAlB,EAA8BH,OAA9B;AACAH,SAAGO,UAAH,CAAcP,GAAGM,UAAjB,EAA6B,CAA7B,EAAgCN,GAAGQ,IAAnC,EAAyCR,GAAGQ,IAA5C,EAAkDR,GAAGS,aAArD,EAAoEX,KAApE;AACD;;;;EA3B+Ba,mD;;AA8BlCC,mCAAeC,GAAf,CAAmBjB,mBAAnB;;kBAEeA,mB","file":"CanvasTextureLoader.js","sourcesContent":["//@flow\nimport {\n  WebGLTextureLoaderSyncHashCache,\n  globalRegistry\n} from \"webgltexture-loader\";\n\nclass CanvasTextureLoader extends WebGLTextureLoaderSyncHashCache<\n  HTMLCanvasElement\n> {\n  disposes = {};\n\n  canLoad(input: any) {\n    return input instanceof HTMLCanvasElement;\n  }\n\n  inputHash(input: HTMLCanvasElement) {\n    return input;\n  }\n\n  getNoCache(input: HTMLCanvasElement) {\n    const { gl } = this;\n    const { width, height } = input;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, input);\n    return { texture, width, height };\n  }\n\n  update(input: HTMLCanvasElement) {\n    const { gl } = this;\n    const { texture } = this.get(input);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, input);\n  }\n}\n\nglobalRegistry.add(CanvasTextureLoader);\n\nexport default CanvasTextureLoader;\n"]}